///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class UserDetailsModelRoles {
/*
{
  "id": 7,
  "name": "Interview",
  "description": "for interview candidates",
  "disabled": false
}
*/

  late int id;
  late String name;
  late String description;
  late bool disabled;

  UserDetailsModelRoles({
    required this.id,
    required this.name,
    required this.description,
    required this.disabled,
  });
  UserDetailsModelRoles.fromJson(Map<String, dynamic> json) {
    id = json['id'].toInt();
    name = json['name'].toString();
    description = json['description'].toString();
    disabled = json['disabled'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['description'] = description;
    data['disabled'] = disabled;
    return data;
  }
}

class UserDetailsModel {
/*
{
  "username": "interview",
  "userId": 133,
  "base64EncodedAuthenticationKey": "aW50ZXJ2aWV3OnBhc3N3b3Jk",
  "authenticated": true,
  "officeId": 1,
  "officeName": "Head Office Mysore",
  "roles": [
    {
      "id": 7,
      "name": "Interview",
      "description": "for interview candidates",
      "disabled": false
    }
  ],
  "permissions": [
    "READ_OFFICE"
  ],
  "shouldRenewPassword": false,
  "isTwoFactorAuthenticationRequired": false
}
*/

  late String username;
  late int userId;
  late String base64EncodedAuthenticationKey;
  late bool authenticated;
  late int officeId;
  late String officeName;
  late List<UserDetailsModelRoles> roles;
  late List<String> permissions;
  late bool shouldRenewPassword;
  late bool isTwoFactorAuthenticationRequired;

  UserDetailsModel({
    required this.username,
    required this.userId,
    required this.base64EncodedAuthenticationKey,
    required this.authenticated,
    required this.officeId,
    required this.officeName,
    required this.roles,
    required this.permissions,
    required this.shouldRenewPassword,
    required this.isTwoFactorAuthenticationRequired,
  });
  UserDetailsModel.fromJson(Map<String, dynamic> json) {
    username = json['username'].toString();
    userId = json['userId']?.toInt();
    base64EncodedAuthenticationKey = json['base64EncodedAuthenticationKey'].toString();
    authenticated = json['authenticated'];
    officeId = json['officeId'].toInt();
    officeName = json['officeName'].toString();
    if (json['roles'] != null) {
      final v = json['roles'];
      final arr0 = <UserDetailsModelRoles>[];
      v.forEach((v) {
        arr0.add(UserDetailsModelRoles.fromJson(v));
      });
      roles = arr0;
    }
    if (json['permissions'] != null) {
      final v = json['permissions'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      permissions = arr0;
    }
    shouldRenewPassword = json['shouldRenewPassword'];
    isTwoFactorAuthenticationRequired = json['isTwoFactorAuthenticationRequired'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['username'] = username;
    data['userId'] = userId;
    data['base64EncodedAuthenticationKey'] = base64EncodedAuthenticationKey;
    data['authenticated'] = authenticated;
    data['officeId'] = officeId;
    data['officeName'] = officeName;
    if (roles != null) {
      final v = roles;
      final arr0 = [];
      v.forEach((v) {
        arr0.add(v.toJson());
      });
      data['roles'] = arr0;
    }
    if (permissions != null) {
      final v = permissions;
      final arr0 = [];
      v.forEach((v) {
        arr0.add(v);
      });
      data['permissions'] = arr0;
    }
    data['shouldRenewPassword'] = shouldRenewPassword;
    data['isTwoFactorAuthenticationRequired'] = isTwoFactorAuthenticationRequired;
    return data;
  }
}
